{"version":3,"file":"static/js/960.9f23274d.chunk.js","mappings":"kLAEMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,oDAGPC,EAAQ,mCAAG,WAAMC,EAAUC,GAAhB,0EAETA,EAFS,gCAGIL,EAASM,IAAT,uCAA6CF,GAAW,CACjEC,OAAO,CACHE,QAAS,sCALR,OAGbC,EAHa,kBAUVH,EAVU,gCAWKL,EAASM,IAAT,uCAA6CF,GAAW,CACtEC,OAAO,CACHE,QAAS,mCACTE,MAAOJ,KAdF,OAWZG,EAXY,qBAkBbE,QAAQC,IAAIH,GAlBC,kBAmBNA,EAASI,MAnBH,4CAAH,wDAwCd,O,4CC/BA,IAZe,WACX,OAAO,SAAC,KAAD,CACPC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,GACdC,aAAa,GACbC,SAAS,M,kICsCb,UA1Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA6BF,EAAAA,EAAAA,WAAS,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WAERjB,QAAQC,IAAI,SACZe,GAAW,GACX,IAAME,EAAS,mCAAG,gHAEOzB,EAAAA,EAAAA,GAAS,SAAD,OAAUiB,EAAV,aAFf,OAERS,EAFQ,OAGRC,EAAaD,EAAON,KAC1BC,EAAQM,GACRJ,GAAW,GALG,gDAOdhB,QAAQC,IAAR,MAPc,yDAAH,qDAUfiB,MACC,CAACR,IACJV,QAAQC,IAAI,WAIV,gBAAIoB,UAAWC,EAAAA,EAAAA,KAAf,UACGP,IAAW,SAAC,IAAD,IADd,OAEGF,QAFH,IAEGA,OAFH,EAEGA,EAAMU,KAAI,SAACV,GACV,IAAMW,EAAkC,QAAnB,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMY,cAAwBZ,EAAKa,KAAO,iBAC3D,OACE,2BACE,gBAAKC,IAAG,gDAAoCd,QAApC,IAAoCA,OAApC,EAAoCA,EAAMY,cAAgBG,IAAKJ,KACvE,uBAAIX,EAAKa,QACT,uBAAIb,EAAKgB,cAHFhB,EAAKiB,Y,mBCrCxB,KAAgB,KAAO,qBAAqB,WAAa,2BAA2B,OAAS","sources":["components/Api.js","components/molecules/Loader/Loader.jsx","components/organism/Cast/Cast.jsx","webpack://react-homework-template/./src/components/organism/Outlet.module.css?f8ce"],"sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/trending/movie/day'\n})\n\nconst fetchApi = async(settings, params) => {\n    let response\n    if(!params){\n    response = await instance.get(`https://api.themoviedb.org/3/${settings}`,{\n            params:{\n                api_key: '2e46478410a3b7ef74a24e2b089ec9d3',\n                \n            }\n        })\n    }\n    if(params){\n     response = await instance.get(`https://api.themoviedb.org/3/${settings}`,{\n        params:{\n            api_key: '2e46478410a3b7ef74a24e2b089ec9d3',\n            query: params\n        }\n    })\n    }\n    console.log(response)\n    return response.data\n}\n// async function fetchApi() {\n//     try {\n//       const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day',{\n//         params: {\n//             api_key: '2e46478410a3b7ef74a24e2b089ec9d3'\n//         }\n//       });\n//       console.log(response);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n// const fetchApi = async() => {\n//     const defaultLink = 'https://api.themoviedb.org/3/trending/movie/day?api_key='\n//     const APIKEY = '2e46478410a3b7ef74a24e2b089ec9d3'\n//     return await fetch(`${defaultLink}${APIKEY}`).then(r => r.json())\n// }\n\nexport default fetchApi","import { Circles } from \"react-loader-spinner\";\n\n\nconst Loader = () => {\n    return <Circles\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    ariaLabel=\"circles-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n  />\n}\n\nexport default Loader","import React from 'react';\nimport fetchApi from 'components/Api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/molecules/Loader/Loader';\nimport styles from '../Outlet.module.css'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading,setLoading] = useState(false)\n\n\n  useEffect(() => {\n \n    console.log('works')\n    setLoading(true)\n    const fetchCast = async () => {\n      try {\n        const result = await fetchApi(`movie/${movieId}/credits`);\n        const castResult = result.cast;\n        setCast(castResult);\n        setLoading(false)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  console.log('render') \n  \n  return (\n    \n    <ul className={styles.list}>\n      {loading && <Loader></Loader>}\n      {cast?.map((cast) => {\n        const altImage = cast?.profile_path !== null ? cast.name : 'No image found'\n        return (\n          <li key={cast.id}>\n            <img src={`https://image.tmdb.org/t/p/w200${cast?.profile_path}`} alt={altImage} />\n            <p>{cast.name}</p>\n            <p>{cast.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Outlet_list__hO6y7\",\"list__item\":\"Outlet_list__item__CDafY\",\"margin\":\"Outlet_margin__AWWcl\"};"],"names":["instance","axios","baseURL","fetchApi","settings","params","get","api_key","response","query","console","log","data","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","fetchCast","result","castResult","className","styles","map","altImage","profile_path","name","src","alt","character","id"],"sourceRoot":""}