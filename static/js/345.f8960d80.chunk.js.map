{"version":3,"file":"static/js/345.f8960d80.chunk.js","mappings":"kLAEMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,oDAGPC,EAAQ,mCAAG,WAAMC,EAAUC,GAAhB,0EAETA,EAFS,gCAGIL,EAASM,IAAT,uCAA6CF,GAAW,CACjEC,OAAO,CACHE,QAAS,sCALR,OAGbC,EAHa,kBAUVH,EAVU,gCAWKL,EAASM,IAAT,uCAA6CF,GAAW,CACtEC,OAAO,CACHE,QAAS,mCACTE,MAAOJ,KAdF,OAWZG,EAXY,qBAkBbE,QAAQC,IAAIH,GAlBC,kBAmBNA,EAASI,MAnBH,4CAAH,wDAwCd,O,8GCNA,UAnCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEOhB,EAAAA,EAAAA,GAAS,SAAD,OAAUU,EAAV,aAFf,OAERO,EAFQ,OAGRC,EAAcD,EAAOE,QAC3BL,EAAWI,GACXX,QAAQC,IAAIS,GALE,gDAOdV,QAAQC,IAAR,MAPc,yDAAH,qDAUfQ,MACC,CAACN,IACJ,IAAMU,EACe,IAAnBP,EAAQQ,QACN,oDAEA,yBACGR,EAAQS,KAAI,SAACC,GACZ,OACE,iCACE,yCAAeA,EAAOC,WACtB,uBAAID,EAAOE,kBAOvB,OADAlB,QAAQC,IAAIK,IACL,yBAAMO","sources":["components/Api.js","components/organism/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/trending/movie/day'\n})\n\nconst fetchApi = async(settings, params) => {\n    let response\n    if(!params){\n    response = await instance.get(`https://api.themoviedb.org/3/${settings}`,{\n            params:{\n                api_key: '2e46478410a3b7ef74a24e2b089ec9d3',\n                \n            }\n        })\n    }\n    if(params){\n     response = await instance.get(`https://api.themoviedb.org/3/${settings}`,{\n        params:{\n            api_key: '2e46478410a3b7ef74a24e2b089ec9d3',\n            query: params\n        }\n    })\n    }\n    console.log(response)\n    return response.data\n}\n// async function fetchApi() {\n//     try {\n//       const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day',{\n//         params: {\n//             api_key: '2e46478410a3b7ef74a24e2b089ec9d3'\n//         }\n//       });\n//       console.log(response);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n// const fetchApi = async() => {\n//     const defaultLink = 'https://api.themoviedb.org/3/trending/movie/day?api_key='\n//     const APIKEY = '2e46478410a3b7ef74a24e2b089ec9d3'\n//     return await fetch(`${defaultLink}${APIKEY}`).then(r => r.json())\n// }\n\nexport default fetchApi","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchApi from 'components/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const result = await fetchApi(`movie/${movieId}/reviews`);\n        const resultArray = result.results;\n        setReviews(resultArray);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  const render =\n    reviews.length === 0 ? (\n      <p>There is no reviews yet</p>\n    ) : (\n      <div>\n        {reviews.map((review) => {\n          return (\n            <>\n              <h3>{`Author ${review.author}`}</h3>\n              <p>{review.content}</p>\n            </>\n          );\n        })}\n      </div>\n    );\n  console.log(reviews);\n  return <div>{render}</div>;\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","fetchApi","settings","params","get","api_key","response","query","console","log","data","movieId","useParams","useState","reviews","setReviews","useEffect","fetchCast","result","resultArray","results","render","length","map","review","author","content"],"sourceRoot":""}